apply plugin: 'com.android.library'

/**
 * library module configuration
 */
android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

/**
 * create jar/aar file out of library module
 */
def buildlibDir = "${projectDir}/generated/lib"
task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into("$buildlibDir")
    into('lib') {
        from 'libs'
    }
    include('classes.jar')
    rename('classes.jar', projectDir.name + '.jar')
    into("$buildlibDir")
}
task clearJar(type: Delete) {
    delete 'build/outputs/jar/' + projectDir.name + '.jar'
}
makeJar.dependsOn(clearJar, build)

/**
 * create Java Docs Task
 */
def javaDocDir = "${projectDir}/generated/javaoc"
task createJavadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("$javaDocDir" + "/")
    failOnError false
}

/**
 * apply checkstyle task
 */
apply plugin: 'checkstyle'
def reportsDir = "${projectDir}/generated/reports"

def qualityDir = "${projectDir}/config"

checkstyle {
    toolVersion = '7.2+'
}
task checkstyle(type: Checkstyle,
        group: 'Verification',
        description: 'Runs code style checks') {
    configFile = rootProject.file("$qualityDir/checkstyle/google_checks.xml");
    println "configFile: " + "$qualityDir/checkstyle/google_checks.xml"
    showViolations = false
    ignoreFailures = true

    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'


    reports {
        xml.enabled = true
        xml {
            destination "$reportsDir/" +
                    "/checkstyle_report" +
                    ".xml"
        }
        html.enabled = true
        html {
            stylesheet resources.text.fromFile("$qualityDir/checkstyle/xsl/checkstyle-author.xsl")
            destination "$reportsDir/" +
                    "/checkstyle_report" +
                    ".html"
        }
    }

    classpath = files()
}

/**
 * apply findbugs task
 */
apply plugin: 'findbugs'
task findbugs(type: FindBugs,
        group: 'Verification',
        description: 'Inspect java bytecode for bugs',
        dependsOn: ['compileDebugSources']) {
    ignoreFailures = true

    effort = "max"
    reportLevel = "high"
    println "${projectDir}/build/intermediates/classes/debug/"
    classes = files("${projectDir}/build/intermediates/classes/debug/")
    excludeFilter = new File("$qualityDir/findbugs/android-exclude-filter.xml")

    source = fileTree('src/main/java/')
    classpath = files()

    reports {

        xml.enabled = false

        if (project.hasProperty('enable_xml')) {
            xml.enabled = Boolean.parseBoolean(project.property('enable_xml'))
            println "xml.enabled value = " + xml.enabled
            xml.withMessages = true
        }

        html.enabled = !xml.isEnabled()

        xml {

            destination "$reportsDir/" +
                    "/findbugs_report" +
                    ".xml"
        }
        html {
            destination "$reportsDir/" +
                    "/findbugs_report" +
                    ".html"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.facebook.android:facebook-login:4.33.0'

    //Firebase
    implementation 'com.google.android.gms:play-services-auth:15.0.1'
    implementation 'com.google.firebase:firebase-core:15.0.2'
    implementation 'com.google.firebase:firebase-auth:15.1.0'
    implementation 'com.firebase:firebase-client-android:2.5.2'

    // Tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

}
